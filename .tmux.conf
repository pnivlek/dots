#########################
# Tmux.conf             #
# Kelvin Porter            #
#########################

# based off of https://github.com/tony/tmux-config

# reloading
bind r source-file ~/.tmux.conf

# set window split
unbind '"'
unbind %
bind-key g split-window
bind-key v split-window -h

set -g default-terminal "${TERM}"
set -ga terminal-overrides ",rxvt-unicode-256color:Tc"
set -g default-shell "${SHELL}"

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default,dim # fg=base0

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default,bright # fg=orange

# pane border
set-option -g pane-border-style fg=colour235 #fg=base02
set-option -g pane-active-border-style fg=colour240 #fg=base01

# message text
set-option -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour green #green

# Status bar configuration - credits to huyvohcmc on github
set-option -g status-interval 120
set-option -g status-position bottom 
set-option -g status-justify left
set-option -g status-style bg=default,fg=colour252
set-option -g window-status-format " #[fg=colour244]#I:#W "
set-option -g window-status-current-format "#[bg=colour0,fg=colour15,bold] #I:#W "
set -g status-right "#{s|$HOME|~|:pane_current_path} - #H - #(uptime | cut -d "," -f 4-)" 

# C-a is better than C-b
set-option -g prefix C-a
bind-key -n C-t send-prefix
bind-key C-a last-window

# Start numbering at 1
set-window-option -g pane-base-index 1
set -g base-index 1

# Allows for faster key repetition while still being able to repeat
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# HJKL and ctrl hjkl pane resize
bind H resize-pane -L 2
bind J resize-pane -D 2
bind K resize-pane -U 2
bind L resize-pane -R 2
bind C-H resize-pane -L 10
bind C-J resize-pane -D 10
bind C-K resize-pane -U 10
bind C-L resize-pane -R 10

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# set to main-horizontal, 66% height for main pane
bind m run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"
# Same thing for verical layouts
bind M run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50"

# Longer history
set -g history-limit 100000

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tpm-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Automatically restore tmux session after tmux server start
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-restore 'on'

set -g @plugin 'fcsonline/tmux-thumbs'
set -g @thumbs-key F

# Run tpm
run -b '~/.tmux/plugins/tpm/tpm'
