#
# wm independent hotkeys
#

# terminal emulator
super + Return
	st

# program launcher
super + d
	dmenu_run -l 5 -i -p "run:" -fn "Dina:style=Regular"

# toggle bar
super + shift + w
    	~/.local/bin/toggle_bar.sh

# Make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd; notify-send 'sxhkd' 'Reloaded config'

# Function keys
super + XF86AudioMute
    mpc seek -00:00:10 && notify-send -u low "Seek -10 sec."
super + XF86AudioLowerVolume
    mpc seek +00:00:10 && notify-send -u low "Seek +10 sec."
super + XF86AudioRaiseVolume
	mpc toggle
XF86AudioMute
    amixer sset Master toggle
XF86AudioLowerVolume
    amixer sset Master 5%-
XF86AudioRaiseVolume
    amixer sset Master 5%+
XF86AudioMicMute
    amixer sset Mic toggle
XF86MonBrightnessDown
	light -U 10% && polybar-msg hook backlight 1
XF86MonBrightnessUp
	light -A 10% && polybar-msg hook backlight 1

# Screenshotting stuff
super + shift + s
    maim -s -u | xclip -selection clipboard -t image/png -i

# Snapshot stuff
XF86Display
    ~/.local/bin/snapshot.sh select
shift+XF86Display
    ~/.local/bin/snapshot.sh window

# lockscreen
super + shift + x
	betterlockscreen -l

# passmenu
super + v
    passmenu-rs -l 16
super + shift + v
    passmenu-rs --type -l 16

#
# bspwm hotkeys
#

#Script for scratchpads anywhere
#Credit to /u/ParityLentil on reddit - https://www.reddit.com/comments/3xnwdf

super + w
    id=$(bspc query -N -n "focused");\
    if [ -n "$id" ];then \
        xprop -id $id -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
        bspc node -t "floating";\
        xdotool windowunmap $id;\
    fi

super + shift + w
    i=$(bspc query -N -n "focused.floating");\
    if [ -n "$i" ];then \
        xprop -id $i -f _SCRATCH 32ii -set _SCRATCH $(date +%s,%N);\
        xdotool windowunmap $i;\
    else;\
        i=$(for w in $(xwininfo -root -children | grep -e "^\s*0x[0-9a-f]\+" -o);do \
            t=$(xprop -id $w _SCRATCH | grep ' = \(.*\)');\
            if [ -n "$t" ];then \
                echo $t $w;\
            fi;\
        done|sort -n|head -n1|cut -d" " -f 5);\
        if [ -n "$i" ];then \
            xprop -id $i -remove _SCRATCH;\
            bspc rule -a \* state=floating center=on --one-shot;\
            xdotool windowmap $i;\
            bspc node -f $i;\
        fi;\
    fi

# Send a window to the top right corner and make it sticky. Also locks it so that it's not closed by misclicks.
#super + shift + p
#	i=$(bspc query -N -n "focused.floating");\
#	if [ ! -n "$i" ]; then \
#		xdotool windowmove $i ;\
#		bspc rule -a \* state=floating sticky=on --one-shot;\
#	else;\
#	i = $(
#




# quit bspwm normally
super + shift + Escape
	bspc quit

# close and kill
super + {_,shift + }q
	bspc node -{k,c}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node
super + {_,shift + }c
	bspc node -f {next,prev}

# focus the next/previous desktop
super + bracket{left,right}
	bspc desktop -f {prev,next}

# focus the last node/desktop
super + {grave,backslash}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + shift + {h,j,k,l}
	bspc node -p {west,south,north,east}


# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# resize tiled/floating
#

# expand the tiled space in the given direction
ctrl + super + {h,j,k,l}
	bspc node {@west -r -10,@south -r +10,@north -r -10,@east -r +10}

# contract the tiled space in the given direction
alt + super + shift + {h,j,k,l}
	bspc node {@east -r -10,@north -r +10,@south -r -10,@west -r +10}

# move a floating window
super + {Left,Down,Up,Right}
	xdo move {-x -20,-y +20,-y -20,-x +20}

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
super + ctrl + alt + {h,j,k,l}
	bspc node -z {right -40 0,top 0 40,bottom 0 -40,left 40 0}

# move a floating window
alt + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
